name: CI Pipeline

on:
  push:
    branches: [ "main" , "development"]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Create ./test/env.yaml file
      run: |
        echo "ENV: ${{ secrets.NODE_ENV }}" >> ./test/env.yaml
        echo "DATABASE:" >> ./test/env.yaml
        echo "  HOST_DEV: ${{ secrets.DATABASE_HOST_DEV }}" >> ./test/env.yaml
        echo "  HOST_PROD: ${{ secrets.DATABASE_HOST_PROD }}" >> ./test/env.yaml
        echo "  PORT: ${{ secrets.DATABASE_PORT }}" >> ./test/env.yaml
        echo "  NAME: ${{ secrets.DATABASE_NAME }}" >> ./test/env.yaml
        echo "  USERNAME: ${{ secrets.DATABASE_USER }}" >> ./test/env.yaml
        echo "  PASSWORD: ${{ secrets.DATABASE_PASSWORD }}" >> ./test/env.yaml
        echo "BACKEND:" >> ./test/env.yaml
        echo "  HOST_DEV: ${{ secrets.BACKEND_HOST_DEV }}" >> ./test/env.yaml
        echo "  HOST_PROD: ${{ secrets.DOCKER_BACKEND_HOST_PROD }}" >> ./test/env.yaml
        echo "  PORT: ${{ secrets.BACKEND_PORT }}" >> ./test/env.yaml
        echo "  API_KEY: ${{ secrets.API_KEY }}" >> ./test/env.yaml
        
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push
      run: |
        docker-compose build
        docker-compose push
