version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: 65050816/backend:latest
    ports:
      - "5001:5001"
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy
    restart: always
    env_file:
      - ./backend/.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: 65050816/frontend:latest
    ports:
      - "3000:80"
    networks:
      - app-network
    env_file:
      - ./frontend/.env
  
  test:
    build:
      context: ./test
      dockerfile: Dockerfile
    image: 65050816/test:latest
    ports:
      - "8080:8080"
    networks:
      - app-network
    env_file:
      - ./test/env.yaml
    depends_on:
      backend:
        condition: service_healthy

  db:
    image: 65050816/mysql:latest
    container_name: mysql-container
    environment:
      MYSQL_ROOT_PASSWORD: 1234567890
      MYSQL_DATABASE: MADSS
      MYSQL_ALLOW_EMPTY_PASSWORD: "no"
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./backend/database/sql/testMoviesScript.sql:/docker-entrypoint-initdb.d/testMoviesScript.sql:ro
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root -p1234567890 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

volumes:
  db_data:

networks:
  app-network:
    driver: bridge
